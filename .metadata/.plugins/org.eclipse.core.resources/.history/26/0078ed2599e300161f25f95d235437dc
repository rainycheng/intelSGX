#include <stdarg.h>
#include <stdio.h>      /* vsnprintf */

#include "encl1.h"
#include "encl1_t.h"  /* print_string */

#include <sgx_tcrypto.h>
#include <sgx_trts.h>

/* 
 * printf: 
 *   Invokes OCALL to display the enclave buffer to the terminal.
 */
void printf(const char *fmt, ...)
{
    char buf[BUFSIZ] = {'\0'};
    va_list ap;
    va_start(ap, fmt);
    vsnprintf(buf, BUFSIZ, fmt, ap);
    va_end(ap);
    ocall_encl1_sample(buf);
}

int ecall_encl1_sample()
{
  printf("IN ENCL1\n");
  return 0;
}

void ecall_encl1_AES_GCM_decrypt(const char *p_src, uint32_t src_len, char *p_dec, uint32_t *dec_len)
{
	const unsigned char gcm_key[16]= {
	        0xee,0xbc,0x1f,0x57,0x48,0x7f,0x51,0x92,0x1c,0x04,0x65,0x66,
	        0x5f,0x8a,0xe6,0xd1
	};
	const unsigned char gcm_iv[12] = {
	        0x99,0xaa,0x3e,0x68,0xed,0x81,0x73,0xa0,0xee,0xd0,0x66,0x84
	};

	sgx_status_t ret = SGX_ERROR_UNEXPECTED;
	sgx_aes_gcm_128bit_key_t *p_key;
	uint8_t *pest_src = "My first encryption test!";
//	uint32_t src_len;
	uint8_t *p_dst;
	uint8_t *p_iv;
	uint32_t iv_len;
	uint8_t *p_aad;
	uint32_t aad_len;
	sgx_aes_gcm_128bit_tag_t *p_out_mac;
    uint8_t *p_decrypt;

    p_key = gcm_key;
//    src_len = strlen(p_src);
    p_dst = (uint8_t *)malloc(sizeof(uint8_t)*1000);
    p_iv = gcm_iv;
    iv_len = 12;
    p_aad = NULL;
    aad_len = 0;
    p_out_mac = (sgx_aes_gcm_128bit_tag_t *)malloc(sizeof(sgx_aes_gcm_128bit_tag_t)*1000);

    ret = sgx_rijndael128GCM_encrypt(p_key, pest_src, strlen(pest_src), p_dst, p_iv, iv_len, p_aad, aad_len, p_out_mac);

    if (ret == SGX_SUCCESS){
       printf("AES GCM encryption success!\n");
       printf("Plain txt: %s\n", pest_src);
       printf("Encrypted txt: %s\n", p_dst);
       printf("MAC: %s\n", p_out_mac);
    }

    p_decrypt = (uint8_t *)malloc(sizeof(uint8_t)*1000);
    ret = sgx_rijndael128GCM_decrypt(p_key, p_src, src_len, p_decrypt, p_iv, iv_len, p_aad, aad_len, p_out_mac);
    p_dec = p_decrypt;
    *dec_len = strlen(p_decrypt);
    if (ret == SGX_SUCCESS){
    	printf("transfer p_src: %s\n",p_src);
    	printf("AES GCM decryption success!\n");
    	printf("Decrypted txt: %s\n", p_dec);
    	printf("MAC: %s\n", p_out_mac);
    }
}
